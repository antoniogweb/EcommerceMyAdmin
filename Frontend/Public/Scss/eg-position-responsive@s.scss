@media (min-width: $breakpoint-small) and (max-width: $breakpoint-medium - 1px) {
	
	
	/* Edges
	========================================================================== */

	/* Don't use `width: 100%` because it is wrong if the parent has padding. */
	.eg-position-top\@s {
		top: 0;
		left: 0;
		right: 0;
	}

	.eg-position-bottom\@s {
		bottom: 0;
		left: 0;
		right: 0;
	}

	.eg-position-left\@s {
		top: 0;
		bottom: 0;
		left: 0;
	}

	.eg-position-right\@s {
		top: 0;
		bottom: 0;
		right: 0;
	}


	/* Corners
	========================================================================== */

	.eg-position-top-left\@s {
		top: 0;
		left: 0;
	}

	.eg-position-top-right\@s {
		top: 0;
		right: 0;
	}

	.eg-position-bottom-left\@s {
		bottom: 0;
		left: 0;
	}

	.eg-position-bottom-right\@s {
		bottom: 0;
		right: 0;
	}

	/*
	* Center
	* 1. Fix text wrapping if content is larger than 50% of the container.
	*/

	.eg-position-center\@s {
		top: 50%;
		left: 50%;
		transform: translate(-50%,-50%);
		/* 1 */
		width: max-content;
		max-width: 100%;
		box-sizing: border-box;
	}

	/* Vertical */
	[class*='eg-position-center-left@s'],
	[class*='eg-position-center-right@s'] {
		top: 50%;
		transform: translateY(-50%);
	}

	.eg-position-center-left\@s { left: 0; }
	.eg-position-center-right\@s { right: 0; }

	.eg-position-center-left-out\@s {
		right: 100%;
		width: max-content;
	}

	.eg-position-center-right-out\@s {
		left: 100%;
		width: max-content;
	}

	/* Horizontal */
	.eg-position-top-center\@s,
	.eg-position-bottom-center\@s {
		left: 50%;
		transform: translateX(-50%);
		/* 1 */
		width: max-content;
		max-width: 100%;
		box-sizing: border-box;
	}

	.eg-position-top-center\@s { top: 0; }
	.eg-position-bottom-center\@s { bottom: 0; }


	
	/* Margin modifier
	========================================================================== */

	/*
	* Small
	*/



	.eg-position-small.eg-position-center\@s { transform: translate(-50%, -50%) translate(-$position-small-margin, (-$position-small-margin)); }

	.eg-position-small[class*='eg-position-center-left@s'],
	.eg-position-small[class*='eg-position-center-right@s'] { transform: translateY(-50%) translateY(-$position-small-margin); }

	.eg-position-small.eg-position-top-center\@s,
	.eg-position-small.eg-position-bottom-center\@s { transform: translateX(-50%) translateX(-$position-small-margin); }

	/*
	* Medium
	*/



	.eg-position-medium.eg-position-center\@s { transform: translate(-50%, -50%) translate(-$position-medium-margin, (-$position-medium-margin)); }

	.eg-position-medium[class*='eg-position-center-left@s'],
	.eg-position-medium[class*='eg-position-center-right@s'] { transform: translateY(-50%) translateY(-$position-medium-margin); }

	.eg-position-medium.eg-position-top-center\@s,
	.eg-position-medium.eg-position-bottom-center\@s { transform: translateX(-50%) translateX(-$position-medium-margin); }

	/*
	* Large
	*/



	.eg-position-large.eg-position-center\@s { transform: translate(-50%, -50%) translate(-$position-large-margin, (-$position-large-margin)); }

	.eg-position-large[class*='eg-position-center-left@s'],
	.eg-position-large[class*='eg-position-center-right@s'] { transform: translateY(-50%) translateY(-$position-large-margin); }

	.eg-position-large.eg-position-top-center\@s,
	.eg-position-large.eg-position-bottom-center\@s { transform: translateX(-50%) translateX(-$position-large-margin); }

}
